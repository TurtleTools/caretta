#!/usr/bin/env python3

from pathlib import Path

import dash
import typer
from cryptography.fernet import Fernet

from caretta import multiple_alignment
from caretta.app import app_helper, app_layout, app_callbacks
from flask import Flask, send_from_directory, abort

# for compressing and decompressing files
KEY = Fernet.generate_key()
SUITE = Fernet(KEY)

STATIC = Path("static")
if not STATIC.exists():
    STATIC.mkdir()

external_stylesheets = [
    "https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css"
]

app = dash.Dash(
    __name__,
    external_stylesheets=external_stylesheets,
    url_base_pathname="/caretta/",
)

introduction_text = """This is a demo webserver for *caretta*. It generates multiple structure alignments for proteins from a selected 
Pfam domain and displays the alignment, the superposed proteins, and aligned structural features.\n\n
While the server is restricted to a maximum of 50 proteins and 100 Pfam domains, you can download this GUI and command-line tool from 
[the git repository](https://github.com/TurtleTools/caretta) and run it locally to use it on as many proteins as you'd like. Also, while this
demo server only uses structures from the PDB, a self-hosted version can be used to align and compare homology models as well.\n\n 
The resulting alignment can be used in machine learning applications aimed at predicting a certain aspect of a protein family, such as 
substrate specificity, interaction specificity, catalytic activity etc. For this purpose, caretta also outputs matrices of extracted 
structural features. These represent different attributes of each residue in each protein, such as residue depth, electrostatic energy, 
bond angles etc. Using these feature matrices as input to a supervised machine learning algorithm can pinpoint residue positions or structural 
regions which correlate with a given property.\n
All the generated data can further be exported for downstream use."""

input_text = "Enter a Pfam ID and click on Load Structures."
placeholder_text = "Enter a Pfam ID (e.g. PF04851.14)"
selection_text = """Use the dropdown box to select which PDB IDs to align."""

PFAM_TO_PDB = app_helper.PfamToPDB(from_file=True, limit=100)
app.layout = app_layout.get_layout(
    introduction_text, input_text, placeholder_text, selection_text, SUITE, pfam_class=PFAM_TO_PDB
)


app_callbacks.register_callbacks(app, PFAM_TO_PDB.get_entries_for_pfam, SUITE)


def run(
    host: str = typer.Argument("0.0.0.0", help="host IP to serve the app"),
    port: int = typer.Argument(8888, help="port"),
):
    """
    caretta-app is the GUI of caretta, capable of aligning and visualising multiple protein structures
    and allowing extraction of aligned features such as bond angles, residue depths and fluctuations.
    """
    multiple_alignment.trigger_numba_compilation()
    app.run_server(host=host, port=port)


if __name__ == "__main__":
    typer.run(run)
